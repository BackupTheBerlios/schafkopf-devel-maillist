From schafkopf-devel at berlios.de  Tue Dec 20 16:32:19 2005
From: schafkopf-devel at berlios.de (schafkopf-devel at berlios.de)
Date: Tue, 20 Dec 2005 16:32:19 +0100
Subject: [Schafkopf-devel] domseichter: Commit Report - Schafkopf Patch by Harald Fernengel
Message-ID: <200512201532.jBKFWJLt029128@sheep.berlios.de>

Log Message:
-----------
Patch by Harald Fernengel <harry at kdevelop.org>:
-Clean up parts of the source code (Card::toString())
-Fixed detection of highest trump in game

Modified Files:
--------------
    schafkopf/src:
        card.cpp
        card.h
        computerplayer.cpp
        game.cpp
        gamecanvas.cpp
        openbook.cpp
        player.cpp
        player.h
        selectgamecolorbox.cpp

-------------- next part --------------
Index: openbook.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/openbook.cpp,v
retrieving revision 1.13
retrieving revision 1.14
diff -Lsrc/openbook.cpp -Lsrc/openbook.cpp -u -r1.13 -r1.14
--- src/openbook.cpp
+++ src/openbook.cpp
@@ -91,7 +91,7 @@
     s_rule rules[] =
     {
         { player1, true },
-        { player1, true },
+        { player2, true },
         { rule1, false },
         { rule2, false },
         { rule3, false }
Index: selectgamecolorbox.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/selectgamecolorbox.cpp,v
retrieving revision 1.3
retrieving revision 1.4
diff -Lsrc/selectgamecolorbox.cpp -Lsrc/selectgamecolorbox.cpp -u -r1.3 -r1.4
--- src/selectgamecolorbox.cpp
+++ src/selectgamecolorbox.cpp
@@ -91,7 +91,7 @@
 	else if(checkGras->isChecked()) return (Card::GRAS);
 	else if(checkHerz->isChecked()) return (Card::HERZ);
 	else if(checkSchellen->isChecked()) return (Card::SCHELLEN);
-	else if(checkFarblos->isChecked()) return (Card::NOCOLOR);
+	return (Card::NOCOLOR);
 }
 
 
Index: player.h
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/player.h,v
retrieving revision 1.25
retrieving revision 1.26
diff -Lsrc/player.h -Lsrc/player.h -u -r1.25 -r1.26
--- src/player.h
+++ src/player.h
@@ -63,7 +63,6 @@
         CardList *allowedCards();
         void removeTrumpf(CardList* liste);
         bool hasTrumpf(CardList* liste);
-        void DebugCardOutput(Card* card);
 
     protected:
         CardList *m_cards;
Index: gamecanvas.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/gamecanvas.cpp,v
retrieving revision 1.50
retrieving revision 1.51
diff -Lsrc/gamecanvas.cpp -Lsrc/gamecanvas.cpp -u -r1.50 -r1.51
--- src/gamecanvas.cpp
+++ src/gamecanvas.cpp
@@ -268,12 +268,13 @@
     unsigned int i=0;
     CanvasCard* card = 0;
            
-    for(i=0;i<PLAYERS;i++)
+    for(i=0;i<PLAYERS;i++) {
         if( m_players[i]->id() == player )
         {
             card = m_players[i]->hasCard( cardid );
             break;
         }
+    }
     
     if( card )
     {
Index: game.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/game.cpp,v
retrieving revision 1.81
retrieving revision 1.82
diff -Lsrc/game.cpp -Lsrc/game.cpp -u -r1.81 -r1.82
--- src/game.cpp
+++ src/game.cpp
@@ -100,6 +100,8 @@
         m_players[i]->stiche()->clear();
     }
 
+    m_playedcards.clear();
+
     postEvent( GameStarted );
     //emit gameStarted();
 }
@@ -191,6 +193,7 @@
                 int* cards = new int[2];
                 cards[0] = c->id();
                 cards[1] = 0;
+                m_playedcards.append(c);
                 postEvent( CardPlayed, tmp[a]->id(), cards, QString::null, true );
             	//emit playerPlayedCard(tmp[a]->id(),c);
 
@@ -243,6 +246,7 @@
 {
     terminated=true;
     postEvent( GameEnded );
+
     //emit gameEnded();
     //EXIT_LOOP();
 }
Index: card.h
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/card.h,v
retrieving revision 1.9
retrieving revision 1.10
diff -Lsrc/card.h -Lsrc/card.h -u -r1.9 -r1.10
--- src/card.h
+++ src/card.h
@@ -22,6 +22,7 @@
 
 class QPixmap;
 class Player;
+class QString;
 
 /**
 This class represents one card.
@@ -95,6 +96,11 @@
           */
         void cardDeckChanged();
         
+        /** Returns a non-localized textual representation of the card,
+         *  for example "Herz Ass"
+         */
+        QString toString() const;
+
     private:
         void init( const enum EType t, const enum EColor c  );
         
Index: player.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/player.cpp,v
retrieving revision 1.33
retrieving revision 1.34
diff -Lsrc/player.cpp -Lsrc/player.cpp -u -r1.33 -r1.34
--- src/player.cpp
+++ src/player.cpp
@@ -77,59 +77,6 @@
         return false;
 }
 
-void Player::DebugCardOutput(Card* card)
-{
-// DS: disabled to fix compiler warnings
-/*
-	char* c;
-	char* s;
-
-	switch (card->color())
-	{
-		case Card::SCHELLEN:
-			c="Schellen";
-			break;
-		case Card::HERZ:
-			c="Herz";
-			break;
-		case Card::EICHEL:
-			c="Eichel";
-			break;
-		case Card::GRAS:
-			c="Gras";
-			break;
-	}
-	switch (card->card())
-	{
-		case Card::SAU:
-			s="SAU";
-			break;
-		case Card::ZEHN:
-			s="ZEHN";
-			break;
-		case Card::KOENIG:
-			s="KOENIG";
-			break;
-		case Card::OBER:
-			s="OBER";
-			break;
-		case Card::UNTER:
-			s="UNTER";
-			break;
-		case Card::NEUN:
-			s="NEUN";
-			break;
-		case Card::ACHT:
-			s="ACHT";
-			break;
-		case Card::SIEBEN:
-			s="SIEBEN";
-			break;
-	}
-	 qDebug("Entferne: %s, %s", c, s);     
-*/
-}
-
 CardList* Player::stiche() const
 {
     return m_stiche;
Index: computerplayer.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/computerplayer.cpp,v
retrieving revision 1.37
retrieving revision 1.38
diff -Lsrc/computerplayer.cpp -Lsrc/computerplayer.cpp -u -r1.37 -r1.38
--- src/computerplayer.cpp
+++ src/computerplayer.cpp
@@ -25,6 +25,7 @@
 #include "gameinfo.h"
 #include "openbook.h"
 
+#include <qstring.h>
 #include <kapplication.h>
 
 ComputerPlayer::ComputerPlayer(unsigned int id,Game* game)
@@ -455,14 +456,13 @@
     int i;
 	
     for(c=m_game->allCards()->first();c;c=m_game->allCards()->next())
-        if(m_game->gameInfo()->istTrumpf(c))
+        if(m_game->gameInfo()->istTrumpf(c)) {
             trumpfs->append(c);
+        }
 
-    for(i=0;i<PLAYERS;i++)
-    {
-        for(c=trumpfs->first();c;c=trumpfs->next())
-            if(m_playedCards[i]->containsRef(c))
-                trumpfs->removeRef(c);
+    for (Card *playedCard = m_game->playedCards()->first(); playedCard;
+            playedCard = m_game->playedCards()->next()) {
+        trumpfs->removeRef(playedCard);
     }
 
     for(c=m_cards->first();c;c=m_cards->next())
@@ -505,6 +505,8 @@
 
 void ComputerPlayer::cardPlayed(unsigned int player, Card *c)
 {
+    qDebug("********* cardPlayed (%s)", c->toString().ascii());
+
     // TODO: was called by signal before the thread change
     // has to be implemented in another way
 	m_playedCards[player]->append(c);
Index: card.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/card.cpp,v
retrieving revision 1.12
retrieving revision 1.13
diff -Lsrc/card.cpp -Lsrc/card.cpp -u -r1.12 -r1.13
--- src/card.cpp
+++ src/card.cpp
@@ -147,3 +147,33 @@
 {
     return m_card + m_color;
 }
+
+
+QString Card::toString() const
+{
+    QString res;
+
+    switch (m_color) {
+    case EICHEL: res += "Eichel"; break;
+    case GRAS: res += "Gras"; break;
+    case HERZ: res += "Herz"; break;
+    case SCHELLEN: res += "Schellen"; break;
+    default: res += "Nocolor"; break;
+    }
+
+    res += ' ';
+
+    switch (m_card) {
+    case SAU: res += "Sau"; break;
+    case ZEHN: res += "Zehn"; break;
+    case KOENIG: res += "Koenig"; break;
+    case OBER: res += "Ober"; break;
+    case UNTER: res += "Unter"; break;
+    case NEUN: res += "Neun"; break;
+    case ACHT: res += "Acht"; break;
+    case SIEBEN: res += "Sieben"; break;
+    default: res += "Unknown"; break;
+    }
+
+    return res;
+}

From schafkopf-devel at berlios.de  Wed Dec 28 17:47:39 2005
From: schafkopf-devel at berlios.de (schafkopf-devel at berlios.de)
Date: Wed, 28 Dec 2005 17:47:39 +0100
Subject: [Schafkopf-devel] bloewe: Commit Report - Schafkopf Positionierung der Karten korrigiert und etwas
Message-ID: <200512281647.jBSGldRX016107@sheep.berlios.de>

Log Message:
-----------
Positionierung der Karten korrigiert und etwas aufgeraeumt

Modified Files:
--------------
    schafkopf/src:
        canvasplayer.cpp

-------------- next part --------------
Index: canvasplayer.cpp
===================================================================
RCS file: /cvsroot/schafkopf/schafkopf/src/canvasplayer.cpp,v
retrieving revision 1.30
retrieving revision 1.31
diff -Lsrc/canvasplayer.cpp -Lsrc/canvasplayer.cpp -u -r1.30 -r1.31
--- src/canvasplayer.cpp
+++ src/canvasplayer.cpp
@@ -90,12 +90,13 @@
 {
     int x = 0, y = 0;
     int num = 0;
-    int w = m_canvas->width();//-DIST;
-    int h = m_canvas->height();//-DIST;
-    int offsetl = 0; //Hiermit kann man am linken Rand Platz schaffen fr z.B. ein Bild des Spielers (fr Netzwerkmodus).
+    int w = m_canvas->width();
+    int h = m_canvas->height();
+    int offsetl = 0; //Hiermit kann man am linken Rand Platz schaffen fuer z.B. ein Bild des Spielers (Netzwerkmodus).
     int availw = m_canvas->width() - 2*DIST - offsetl;
     int cardw = Card::backgroundPixmap()->width();
     int cardh = Card::backgroundPixmap()->height();
+    float cardoverlap = 1./8.; //Ueberlapp der Karten im Verhaeltnis zur Kartenbreite
     
     for( unsigned int z = 0; z < NUMCARDS; z++ )
     {
@@ -123,12 +124,12 @@
             break;
         case 1:
             x=DIST; 
-            y=(h-((cardh/4)*(num-1)+cardh))/2; 
+            y=(h-((cardh*cardoverlap)*(num-1)+cardh))/2; 
         
             m_name->move(x,y-m_name->boundingRect().height());
             break;
-        case 2: 
-            x=(w-((cardw/4)*(num-1)+cardw))/2;
+        case 2:
+            x=( w-( (cardw*cardoverlap)*(num-1)+cardw ) )/2; //berechnet die Position der linken Seite des Kartenstapels
             y=DIST;
         
             m_name->move( (w-m_name->boundingRect().width())/2, y+cardh );
@@ -136,7 +137,7 @@
         case 3:
         default:
             x=w-cardw-DIST;
-            y=(h-((cardh/4)*(num-1)+cardh))/2; 
+            y=(h-((cardh*cardoverlap)*(num-1)+cardh))/2; 
         
             m_name->move(x, y-m_name->boundingRect().height());
             break;
@@ -163,9 +164,9 @@
 	    	x += (availw-cardw)/(num-1);
 	}
         else if(m_position==2)
-            x += (cardw/6);
+            x += (cardw*cardoverlap);
         else
-            y += (cardh/6);
+            y += (cardh*cardoverlap);
 	}
     }
         

